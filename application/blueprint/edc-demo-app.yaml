apiVersion: apps/v1
kind: Deployment
metadata:
  name: edc-demo-app
  namespace: default
  labels:
    app.kubernetes.io/name: edc-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: edc-demo
  template:
    metadata:
      labels:
        app.kubernetes.io/name: edc-demo
    spec:
      serviceAccountName: edc-demo-app-sa
      containers:
      - name: edc-demo-app
        image: ghcr.io/hkassaei/edc-demo-app:v0.2.2 # {"$imagepolicy": "flux-system:edc-demo-app"}
        ports:
        - containerPort: 8081
        env:
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-conn-cloudsql
              key: username
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: db-conn-cloudsql
              key: password
              # [START cloud_sql_proxy_k8s_container]
      - name: cloud-sql-proxy
        # It is recommended to use the latest version of the Cloud SQL proxy
        # Make sure to update on a regular schedule!
        image: gcr.io/cloudsql-docker/gce-proxy:1.30.1
        command:
        - "/cloud_sql_proxy"
        # If connecting from a VPC-native GKE cluster, you can use the
        # following flag to have the proxy connect over private IP
        #- "-ip_address_types=PRIVATE"
        # By default, the proxy will write all logs to stderr. In some
        # environments, anything printed to stderr is consider an error. To
        # disable this behavior and write all logs to stdout (except errors
        # which will still go to stderr), use:
        - "-log_debug_stdout"
        # Replace DB_PORT with the port the proxy should listen on
        # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
        - "-instances=gcprdpscdpochcppaasdev01-c304:us-central1:demo-app-postgres-instance=tcp:5432"
        securityContext:
          # The default Cloud SQL proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
        # You should use resource requests/limits as a best practice to prevent
        # pods from consuming too many resources and affecting the execution of
        # other pods. You should adjust the following values based on what your
        # application needs. For details, see
        # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          requests:
            # The proxy's memory use scales linearly with the number of active
            # connections. Fewer open connections will use less memory. Adjust
            # this value based on your application's requirements.
            memory: "1Gi"
            # The proxy's CPU use scales linearly with the amount of IO between
            # the database and the application. Adjust this value based on your
            # application's requirements.
            cpu: "1"
            # [END cloud_sql_proxy_k8s_container]
      imagePullSecrets:
      - name: ghcr-creds
---
apiVersion: v1
kind: Service
metadata:
  name: edc-demo-app-service
  namespace: default
spec:
  selector:
    app.kubernetes.io/name: edc-demo
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8081
  type: LoadBalancer
